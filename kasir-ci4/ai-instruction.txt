# Aplikasi Kasir dengan CodeIgniter 4 dan Bootstrap 5 (Sneat Theme)

Berikut langkah-langkah membuat aplikasi kasir dengan CodeIgniter 4 dan Bootstrap 5 menggunakan tema Sneat.

## Langkah 1: Persiapan Proyek

1. Buka command prompt/terminal dan jalankan:

```cmd
composer create-project codeigniter4/appstarter kasir-ci4
cd kasir-ci4
```

2. Install Spark untuk membantu development:

```cmd
php spark serve
```

3. Buka browser ke `http://localhost:8080` untuk memverifikasi instalasi berhasil.

## Langkah 2: Setup Database dan Migration

1. Buat database baru (misalnya `ci4_kasir`) di MySQL
2. Konfigurasi database di `app/Config/Database.php`
3. Buat migration untuk tabel-tabel yang dibutuhkan:

```cmd
php spark db:create ci4_kasir
php spark make:migration CreateUsersTable
php spark make:migration CreateProductsTable
php spark make:migration CreateTransactionsTable
php spark make:migration CreateTransactionDetailsTable
php spark make:migration CreateEmployeesTable
```

Edit file migration yang dibuat:

`app/Database/Migrations/2024-06-20-000000_CreateUsersTable.php`:

```php
<?php

namespace App\Database\Migrations;

use CodeIgniter\Database\Migration;

class CreateUsersTable extends Migration
{
    public function up()
    {
        $this->forge->addField([
            'id' => [
                'type' => 'INT',
                'constraint' => 5,
                'unsigned' => true,
                'auto_increment' => true,
            ],
            'username' => [
                'type' => 'VARCHAR',
                'constraint' => '100',
            ],
            'password' => [
                'type' => 'VARCHAR',
                'constraint' => '255',
            ],
            'name' => [
                'type' => 'VARCHAR',
                'constraint' => '100',
            ],
            'role' => [
                'type' => 'ENUM',
                'constraint' => ['admin', 'cashier'],
                'default' => 'cashier',
            ],
            'created_at' => [
                'type' => 'DATETIME',
                'null' => true,
            ],
            'updated_at' => [
                'type' => 'DATETIME',
                'null' => true,
            ],
        ]);
        $this->forge->addKey('id', true);
        $this->forge->createTable('users');
    }

    public function down()
    {
        $this->forge->dropTable('users');
    }
}
```

`app/Database/Migrations/2024-06-20-000001_CreateProductsTable.php`:

```php
<?php

namespace App\Database\Migrations;

use CodeIgniter\Database\Migration;

class CreateProductsTable extends Migration
{
    public function up()
    {
        $this->forge->addField([
            'id' => [
                'type' => 'INT',
                'constraint' => 5,
                'unsigned' => true,
                'auto_increment' => true,
            ],
            'barcode' => [
                'type' => 'VARCHAR',
                'constraint' => '50',
            ],
            'name' => [
                'type' => 'VARCHAR',
                'constraint' => '100',
            ],
            'category' => [
                'type' => 'VARCHAR',
                'constraint' => '50',
            ],
            'price' => [
                'type' => 'DECIMAL',
                'constraint' => '10,2',
            ],
            'stock' => [
                'type' => 'INT',
                'constraint' => 5,
            ],
            'image' => [
                'type' => 'VARCHAR',
                'constraint' => '255',
                'null' => true,
            ],
            'created_at' => [
                'type' => 'DATETIME',
                'null' => true,
            ],
            'updated_at' => [
                'type' => 'DATETIME',
                'null' => true,
            ],
        ]);
        $this->forge->addKey('id', true);
        $this->forge->addUniqueKey('barcode');
        $this->forge->createTable('products');
    }

    public function down()
    {
        $this->forge->dropTable('products');
    }
}
```

Buat juga migration untuk tabel lainnya dengan struktur yang sesuai.

4. Jalankan migration:

```cmd
php spark migrate
```

## Langkah 3: Membuat Model

Buat model untuk setiap tabel:

```cmd
php spark make:model UserModel
php spark make:model ProductModel
php spark make:model TransactionModel
php spark make:model TransactionDetailModel
php spark make:model EmployeeModel
```

Edit file model yang dibuat:

`app/Models/UserModel.php`:

```php
<?php

namespace App\Models;

use CodeIgniter\Model;

class UserModel extends Model
{
    protected $table = 'users';
    protected $primaryKey = 'id';
    protected $allowedFields = ['username', 'password', 'name', 'role'];
    protected $useTimestamps = true;

    protected $beforeInsert = ['hashPassword'];
    protected $beforeUpdate = ['hashPassword'];

    protected function hashPassword(array $data)
    {
        if (!isset($data['data']['password'])) {
            return $data;
        }

        $data['data']['password'] = password_hash($data['data']['password'], PASSWORD_DEFAULT);
        return $data;
    }

    public function getUser($username)
    {
        return $this->where('username', $username)->first();
    }
}
```

`app/Models/ProductModel.php`:

```php
<?php

namespace App\Models;

use CodeIgniter\Model;

class ProductModel extends Model
{
    protected $table = 'products';
    protected $primaryKey = 'id';
    protected $allowedFields = ['barcode', 'name', 'category', 'price', 'stock', 'image'];
    protected $useTimestamps = true;

    public function getProductByBarcode($barcode)
    {
        return $this->where('barcode', $barcode)->first();
    }

    public function search($keyword)
    {
        return $this->like('name', $keyword)
            ->orLike('barcode', $keyword)
            ->orLike('category', $keyword)
            ->findAll();
    }
}
```

Buat juga model untuk tabel lainnya dengan method yang sesuai.

## Langkah 4: Membuat Controller

Buat controller untuk setiap fitur:

```cmd
php spark make:controller Auth --suffix
php spark make:controller Dashboard --suffix
php spark make:controller Products --suffix
php spark make:controller Cashier --suffix
php spark make:controller Reports --suffix
php spark make:controller Settings --suffix
php spark make:controller Employees --suffix
```

Edit file controller yang dibuat:

`app/Controllers/AuthController.php`:

```php
<?php

namespace App\Controllers;

use App\Models\UserModel;
use CodeIgniter\Controller;

class AuthController extends Controller
{
    protected $userModel;

    public function __construct()
    {
        $this->userModel = new UserModel();
    }

    public function login()
    {
        if (session('logged_in')) {
            return redirect()->to('/dashboard');
        }

        $data = [
            'title' => 'Login | Kasir CI4'
        ];

        return view('auth/login', $data);
    }

    public function attemptLogin()
    {
        $username = $this->request->getPost('username');
        $password = $this->request->getPost('password');

        $user = $this->userModel->getUser($username);

        if (!$user || !password_verify($password, $user['password'])) {
            return redirect()->back()->withInput()->with('error', 'Username atau password salah');
        }

        $sessionData = [
            'user_id' => $user['id'],
            'username' => $user['username'],
            'name' => $user['name'],
            'role' => $user['role'],
            'logged_in' => true
        ];

        session()->set($sessionData);

        return redirect()->to('/dashboard');
    }

    public function logout()
    {
        session()->destroy();
        return redirect()->to('/login');
    }
}
```

`app/Controllers/DashboardController.php`:

```php
<?php

namespace App\Controllers;

use App\Models\ProductModel;
use App\Models\TransactionModel;

class DashboardController extends BaseController
{
    protected $productModel;
    protected $transactionModel;

    public function __construct()
    {
        $this->productModel = new ProductModel();
        $this->transactionModel = new TransactionModel();
    }

    public function index()
    {
        if (!session('logged_in')) {
            return redirect()->to('/login');
        }

        $data = [
            'title' => 'Dashboard | Kasir CI4',
            'total_products' => $this->productModel->countAll(),
            'total_transactions' => $this->transactionModel->countAll(),
            'recent_transactions' => $this->transactionModel->orderBy('created_at', 'DESC')->limit(5)->findAll()
        ];

        return view('dashboard/index', $data);
    }
}
```

Buat juga controller untuk fitur lainnya dengan method yang sesuai.

## Langkah 5: Membuat View

1. Buat struktur folder view:

```
app/Views/
├── auth/
│   └── login.php
├── dashboard/
│   └── index.php
├── products/
│   ├── index.php
│   └── create.php
├── cashier/
│   └── index.php
├── reports/
│   └── index.php
├── settings/
│   └── index.php
├── employees/
│   ├── index.php
│   └── create.php
└── templates/
    ├── header.php
    ├── sidebar.php
    ├── footer.php
    └── scripts.php
```

2. Download tema Sneat dari https://themeselection.com/item/sneat-free-dashboard/ dan ekstrak asset-nya ke folder `public/`

3. Buat file layout:

`app/Views/templates/header.php`:

```php
<!DOCTYPE html>
<html lang="en" class="light-style layout-menu-fixed" dir="ltr" data-theme="theme-default" data-assets-path="<?= base_url('assets/sneat/') ?>" data-template="vertical-menu-template-free">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0" />

    <title><?= $title ?? 'Kasir CI4' ?></title>

    <meta name="description" content="" />

    <!-- Favicon -->
    <link rel="icon" type="image/x-icon" href="<?= base_url('assets/sneat/img/favicon/favicon.ico') ?>" />

    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&display=swap" rel="stylesheet" />

    <!-- Icons. Uncomment required icon fonts -->
    <link rel="stylesheet" href="<?= base_url('assets/sneat/vendor/fonts/boxicons.css') ?>" />

    <!-- Core CSS -->
    <link rel="stylesheet" href="<?= base_url('assets/sneat/vendor/css/core.css') ?>" class="template-customizer-core-css" />
    <link rel="stylesheet" href="<?= base_url('assets/sneat/vendor/css/theme-default.css') ?>" class="template-customizer-theme-css" />
    <link rel="stylesheet" href="<?= base_url('assets/sneat/css/demo.css') ?>" />

    <!-- Vendors CSS -->
    <link rel="stylesheet" href="<?= base_url('assets/sneat/vendor/libs/perfect-scrollbar/perfect-scrollbar.css') ?>" />

    <!-- Page CSS -->
    <?= $this->renderSection('page-style') ?>

    <!-- Helpers -->
    <script src="<?= base_url('assets/sneat/vendor/js/helpers.js') ?>"></script>

    <!--! Template customizer & Theme config files MUST be included after core stylesheets and helpers.js in the <head> section -->
    <!--? Config:  Mandatory theme config file contain global vars & default theme options, Set your preferred theme option in this file.  -->
    <script src="<?= base_url('assets/sneat/js/config.js') ?>"></script>
</head>

<body>
    <!-- Layout wrapper -->
    <div class="layout-wrapper layout-content-navbar">
        <div class="layout-container">
            <!-- Menu -->
            <?= $this->include('templates/sidebar') ?>

            <!-- Layout container -->
            <div class="layout-page">
                <!-- Content wrapper -->
                <div class="content-wrapper">
                    <!-- Content -->
                    <div class="container-xxl flex-grow-1 container-p-y">
                        <?= $this->renderSection('content') ?>
                    </div>
                    <!-- / Content -->

                    <!-- Footer -->
                    <footer class="content-footer footer bg-footer-theme">
                        <div class="container-xxl d-flex flex-wrap justify-content-between py-2 flex-md-row flex-column">
                            <div class="mb-2 mb-md-0">
                                ©
                                <script>
                                    document.write(new Date().getFullYear());
                                </script>
                                , made with ❤️ by <a href="https://github.com/yourusername" target="_blank" class="footer-link fw-bolder">Your Name</a>
                            </div>
                        </div>
                    </footer>
                    <!-- / Footer -->

                    <div class="content-backdrop fade"></div>
                </div>
                <!-- Content wrapper -->
            </div>
            <!-- / Layout page -->
        </div>

        <!-- Overlay -->
        <div class="layout-overlay layout-menu-toggle"></div>
    </div>
    <!-- / Layout wrapper -->
```

`app/Views/templates/sidebar.php`:

```php
<!-- Menu -->
<aside id="layout-menu" class="layout-menu menu-vertical menu bg-menu-theme">
    <div class="app-brand demo">
        <a href="<?= base_url() ?>" class="app-brand-link">
            <span class="app-brand-logo demo">
                <svg width="25" viewBox="0 0 25 42" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                    <defs>
                        <path d="M13.7918663,0.358365126 L3.39788168,7.44174259 C0.566865006,9.69408886 -0.379795268,12.4788597 0.557900856,15.7960551 C0.68998853,16.2305145 1.09562888,17.7872135 3.12357076,19.2293357 C3.8146334,19.7207684 5.32369333,20.3834223 7.65075054,21.2172976 L7.59773219,21.2525164 L2.63468769,24.5493413 C0.445452254,26.3002124 0.0884951797,28.5083815 1.56381646,31.1738486 C2.83770406,32.8170431 5.20850219,33.2640127 7.09180128,32.5391577 C8.347334,32.0559211 11.4559176,30.0011079 16.4175519,26.3747182 C18.0338572,24.4997857 18.6973423,22.4544883 18.4080071,20.2388261 C17.963753,17.5346866 16.1776345,15.5799961 13.0496516,14.3747546 L10.9194936,13.4715819 L18.6192054,7.984237 L13.7918663,0.358365126 Z" id="path-1"></path>
                        <path d="M5.47320593,6.00457225 C4.05321814,8.216144 4.36334763,10.0722806 6.40359441,11.5729822 C8.61520715,12.571656 10.0999176,13.2171421 10.8577257,13.5094407 L15.5088241,14.433041 L18.6192054,7.984237 C15.5364148,3.11535317 13.9273018,0.573395879 13.7918663,0.358365126 C13.5790555,0.511491653 10.8061687,2.3935607 5.47320593,6.00457225 Z" id="path-3"></path>
                        <path d="M7.50063644,21.2294429 L12.3234468,23.3159332 C14.1688022,24.7579751 14.397098,26.4880487 13.008334,28.506154 C11.6195701,30.5242593 10.3099883,31.790241 9.07958868,32.3040991 C5.78142938,33.4346997 4.13234973,34 4.13234973,34 C4.13234973,34 2.75489982,33.0538207 2.37032616e-14,31.1614621 C-0.55822714,27.8186216 -0.55822714,26.0572515 -4.05231404e-15,25.8773518 C0.83734071,25.6075023 2.77988457,22.8248993 3.3049379,22.52991 C3.65497346,22.3332504 5.05353963,21.8997614 7.50063644,21.2294429 Z" id="path-4"></path>
                        <path d="M20.6,7.13333333 L25.6,13.8 C26.2627417,14.6836556 26.0836556,15.9372583 25.2,16.6 C24.8538077,16.8596443 24.4327404,17 24,17 L14,17 C12.8954305,17 12,16.1045695 12,15 C12,14.5672596 12.1403557,14.1461923 12.4,13.8 L17.4,7.13333333 C18.0627417,6.24967773 19.3163444,6.07059163 20.2,6.73333333 C20.3516113,6.84704183 20.4862915,6.981722 20.6,7.13333333 Z" id="path-5"></path>
                    </defs>
                    <g id="g-app-brand" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                        <g id="Brand-Logo" transform="translate(-27.000000, -15.000000)">
                            <g id="Icon" transform="translate(27.000000, 15.000000)">
                                <g id="Mask" transform="translate(0.000000, 8.000000)">
                                    <mask id="mask-2" fill="white">
                                        <use xlink:href="#path-1"></use>
                                    </mask>
                                    <use fill="#696cff" xlink:href="#path-1"></use>
                                    <g id="Path-3" mask="url(#mask-2)">
                                        <use fill="#696cff" xlink:href="#path-3"></use>
                                        <use fill-opacity="0.2" fill="#FFFFFF" xlink:href="#path-3"></use>
                                    </g>
                                    <g id="Path-4" mask="url(#mask-2)">
                                        <use fill="#696cff" xlink:href="#path-4"></use>
                                        <use fill-opacity="0.2" fill="#FFFFFF" xlink:href="#path-4"></use>
                                    </g>
                                </g>
                                <g id="Triangle" transform="translate(19.000000, 11.000000) rotate(-300.000000) translate(-19.000000, -11.000000) ">
                                    <use fill="#696cff" xlink:href="#path-5"></use>
                                    <use fill-opacity="0.2" fill="#FFFFFF" xlink:href="#path-5"></use>
                                </g>
                            </g>
                        </g>
                    </g>
                </svg>
            </span>
            <span class="app-brand-text demo menu-text fw-bolder ms-2">Kasir CI4</span>
        </a>

        <a href="javascript:void(0);" class="layout-menu-toggle menu-link text-large ms-auto d-block d-xl-none">
            <i class="bx bx-chevron-left bx-sm align-middle"></i>
        </a>
    </div>

    <div class="menu-inner-shadow"></div>

    <ul class="menu-inner py-1">
        <!-- Dashboard -->
        <li class="menu-item <?= uri_string() == 'dashboard' ? 'active' : '' ?>">
            <a href="<?= base_url('dashboard') ?>" class="menu-link">
                <i class="menu-icon tf-icons bx bx-home-circle"></i>
                <div data-i18n="Dashboard">Dashboard</div>
            </a>
        </li>

        <!-- Produk -->
        <li class="menu-item <?= strpos(uri_string(), 'products') !== false ? 'active' : '' ?>">
            <a href="<?= base_url('products') ?>" class="menu-link">
                <i class="menu-icon tf-icons bx bx-package"></i>
                <div data-i18n="Produk">Produk</div>
            </a>
        </li>

        <!-- Kasir -->
        <li class="menu-item <?= strpos(uri_string(), 'cashier') !== false ? 'active' : '' ?>">
            <a href="<?= base_url('cashier') ?>" class="menu-link">
                <i class="menu-icon tf-icons bx bx-cart"></i>
                <div data-i18n="Kasir">Kasir</div>
            </a>
        </li>

        <!-- Laporan -->
        <li class="menu-item <?= strpos(uri_string(), 'reports') !== false ? 'active' : '' ?>">
            <a href="<?= base_url('reports') ?>" class="menu-link">
                <i class="menu-icon tf-icons bx bx-file"></i>
                <div data-i18n="Laporan">Laporan</div>
            </a>
        </li>

        <!-- Karyawan -->
        <li class="menu-item <?= strpos(uri_string(), 'employees') !== false ? 'active' : '' ?>">
            <a href="<?= base_url('employees') ?>" class="menu-link">
                <i class="menu-icon tf-icons bx bx-user"></i>
                <div data-i18n="Karyawan">Karyawan</div>
            </a>
        </li>

        <!-- Setting -->
        <li class="menu-item <?= strpos(uri_string(), 'settings') !== false ? 'active' : '' ?>">
            <a href="<?= base_url('settings') ?>" class="menu-link">
                <i class="menu-icon tf-icons bx bx-cog"></i>
                <div data-i18n="Setting">Setting</div>
            </a>
        </li>
    </ul>
</aside>
<!-- / Menu -->
```

`app/Views/templates/footer.php`:

```php
<!-- Core JS -->
<!-- build:js assets/vendor/js/core.js -->
<script src="<?= base_url('assets/sneat/vendor/libs/jquery/jquery.js') ?>"></script>
<script src="<?= base_url('assets/sneat/vendor/libs/popper/popper.js') ?>"></script>
<script src="<?= base_url('assets/sneat/vendor/js/bootstrap.js') ?>"></script>
<script src="<?= base_url('assets/sneat/vendor/libs/perfect-scrollbar/perfect-scrollbar.js') ?>"></script>

<script src="<?= base_url('assets/sneat/vendor/js/menu.js') ?>"></script>
<!-- endbuild -->

<!-- Vendors JS -->
<?= $this->renderSection('vendor-script') ?>

<!-- Main JS -->
<script src="<?= base_url('assets/sneat/js/main.js') ?>"></script>

<!-- Page JS -->
<?= $this->renderSection('page-script') ?>

<!-- Place this tag in your head or just before your close body tag. -->
<script async defer src="https://buttons.github.io/buttons.js"></script>
```

4. Buat view untuk login:

`app/Views/auth/login.php`:

```php
<div class="container-xxl">
    <div class="authentication-wrapper authentication-basic container-p-y">
        <div class="authentication-inner">
            <!-- Register -->
            <div class="card">
                <div class="card-body">
                    <!-- Logo -->
                    <div class="app-brand justify-content-center">
                        <a href="<?= base_url() ?>" class="app-brand-link gap-2">
                            <span class="app-brand-logo demo">
                                <svg width="25" viewBox="0 0 25 42" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                                    <defs>
                                        <path d="M13.7918663,0.358365126 L3.39788168,7.44174259 C0.566865006,9.69408886 -0.379795268,12.4788597 0.557900856,15.7960551 C0.68998853,16.2305145 1.09562888,17.7872135 3.12357076,19.2293357 C3.8146334,19.7207684 5.32369333,20.3834223 7.65075054,21.2172976 L7.59773219,21.2525164 L2.63468769,24.5493413 C0.445452254,26.3002124 0.0884951797,28.5083815 1.56381646,31.1738486 C2.83770406,32.8170431 5.20850219,33.2640127 7.09180128,32.5391577 C8.347334,32.0559211 11.4559176,30.0011079 16.4175519,26.3747182 C18.0338572,24.4997857 18.6973423,22.4544883 18.4080071,20.2388261 C17.963753,17.5346866 16.1776345,15.5799961 13.0496516,14.3747546 L10.9194936,13.4715819 L18.6192054,7.984237 L13.7918663,0.358365126 Z" id="path-1"></path>
                                        <path d="M5.47320593,6.00457225 C4.05321814,8.216144 4.36334763,10.0722806 6.40359441,11.5729822 C8.61520715,12.571656 10.0999176,13.2171421 10.8577257,13.5094407 L15.5088241,14.433041 L18.6192054,7.984237 C15.5364148,3.11535317 13.9273018,0.573395879 13.7918663,0.358365126 C13.5790555,0.511491653 10.8061687,2.3935607 5.47320593,6.00457225 Z" id="path-3"></path>
                                        <path d="M7.50063644,21.2294429 L12.3234468,23.3159332 C14.1688022,24.7579751 14.397098,26.4880487 13.008334,28.506154 C11.6195701,30.5242593 10.3099883,31.790241 9.07958868,32.3040991 C5.78142938,33.4346997 4.13234973,34 4.13234973,34 C4.13234973,34 2.75489982,33.0538207 2.37032616e-14,31.1614621 C-0.55822714,27.8186216 -0.55822714,26.0572515 -4.05231404e-15,25.8773518 C0.83734071,25.6075023 2.77988457,22.8248993 3.3049379,22.52991 C3.65497346,22.3332504 5.05353963,21.8997614 7.50063644,21.2294429 Z" id="path-4"></path>
                                        <path d="M20.6,7.13333333 L25.6,13.8 C26.2627417,14.6836556 26.0836556,15.9372583 25.2,16.6 C24.8538077,16.8596443 24.4327404,17 24,17 L14,17 C12.8954305,17 12,16.1045695 12,15 C12,14.5672596 12.1403557,14.1461923 12.4,13.8 L17.4,7.13333333 C18.0627417,6.24967773 19.3163444,6.07059163 20.2,6.73333333 C20.3516113,6.84704183 20.4862915,6.981722 20.6,7.13333333 Z" id="path-5"></path>
                                    </defs>
                                    <g id="g-app-brand" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                                        <g id="Brand-Logo" transform="translate(-27.000000, -15.000000)">
                                            <g id="Icon" transform="translate(27.000000, 15.000000)">
                                                <g id="Mask" transform="translate(0.000000, 8.000000)">
                                                    <mask id="mask-2" fill="white">
                                                        <use xlink:href="#path-1"></use>
                                                    </mask>
                                                    <use fill="#696cff" xlink:href="#path-1"></use>
                                                    <g id="Path-3" mask="url(#mask-2)">
                                                        <use fill="#696cff" xlink:href="#path-3"></use>
                                                        <use fill-opacity="0.2" fill="#FFFFFF" xlink:href="#path-3"></use>
                                                    </g>
                                                    <g id="Path-4" mask="url(#mask-2)">
                                                        <use fill="#696cff" xlink:href="#path-4"></use>
                                                        <use fill-opacity="0.2" fill="#FFFFFF" xlink:href="#path-4"></use>
                                                    </g>
                                                </g>
                                                <g id="Triangle" transform="translate(19.000000, 11.000000) rotate(-300.000000) translate(-19.000000, -11.000000) ">
                                                    <use fill="#696cff" xlink:href="#path-5"></use>
                                                    <use fill-opacity="0.2" fill="#FFFFFF" xlink:href="#path-5"></use>
                                                </g>
                                            </g>
                                        </g>
                                    </g>
                                </svg>
                            </span>
                            <span class="app-brand-text demo text-body fw-bolder">Kasir CI4</span>
                        </a>
                    </div>
                    <!-- /Logo -->
                    <h4 class="mb-2">Selamat Datang! 👋</h4>
                    <p class="mb-4">Silakan login ke akun Anda</p>

                    <?php if (session()->getFlashdata('error')) : ?>
                        <div class="alert alert-danger" role="alert">
                            <?= session()->getFlashdata('error') ?>
                        </div>
                    <?php endif; ?>

                    <form id="formAuthentication" class="mb-3" action="<?= base_url('login') ?>" method="POST">
                        <div class="mb-3">
                            <label for="username" class="form-label">Username</label>
                            <input type="text" class="form-control" id="username" name="username" placeholder="Masukkan username" autofocus />
                        </div>
                        <div class="mb-3 form-password-toggle">
                            <div class="d-flex justify-content-between">
                                <label class="form-label" for="password">Password</label>
                            </div>
                            <div class="input-group input-group-merge">
                                <input type="password" id="password" class="form-control" name="password" placeholder="&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;" aria-describedby="password" />
                                <span class="input-group-text cursor-pointer"><i class="bx bx-hide"></i></span>
                            </div>
                        </div>
                        <div class="mb-3">
                            <button class="btn btn-primary d-grid w-100" type="submit">Login</button>
                        </div>
                    </form>
                </div>
            </div>
            <!-- /Register -->
        </div>
    </div>
</div>
```

5. Buat view untuk dashboard:

`app/Views/dashboard/index.php`:

```php
<?= $this->extend('templates/header') ?>

<?= $this->section('content') ?>
<div class="row">
    <!-- Total Produk -->
    <div class="col-lg-3 col-md-6 col-6 mb-4">
        <div class="card">
            <div class="card-body">
                <div class="card-title d-flex align-items-start justify-content-between">
                    <div class="avatar flex-shrink-0">
                        <span class="avatar-initial rounded bg-label-primary"><i class="bx bx-package"></i></span>
                    </div>
                </div>
                <span class="fw-semibold d-block mb-1">Total Produk</span>
                <h3 class="card-title mb-2"><?= number_format($total_products) ?></h3>
            </div>
        </div>
    </div>

    <!-- Total Transaksi -->
    <div class="col-lg-3 col-md-6 col-6 mb-4">
        <div class="card">
            <div class="card-body">
                <div class="card-title d-flex align-items-start justify-content-between">
                    <div class="avatar flex-shrink-0">
                        <span class="avatar-initial rounded bg-label-success"><i class="bx bx-receipt"></i></span>
                    </div>
                </div>
                <span class="fw-semibold d-block mb-1">Total Transaksi</span>
                <h3 class="card-title mb-2"><?= number_format($total_transactions) ?></h3>
            </div>
        </div>
    </div>
</div>

<!-- Transaksi Terakhir -->
<div class="col-12 col-lg-8 order-2 order-md-3 order-lg-2 mb-4">
    <div class="card">
        <h5 class="card-header">Transaksi Terakhir</h5>
        <div class="card-body">
            <div class="table-responsive text-nowrap">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>No. Transaksi</th>
                            <th>Tanggal</th>
                            <th>Total</th>
                            <th>Kasir</th>
                        </tr>
                    </thead>
                    <tbody>
                        <?php foreach ($recent_transactions as $transaction) : ?>
                            <tr>
                                <td><?= $transaction['invoice'] ?></td>
                                <td><?= date('d/m/Y H:i', strtotime($transaction['created_at'])) ?></td>
                                <td>Rp <?= number_format($transaction['total'], 0, ',', '.') ?></td>
                                <td><?= $transaction['cashier_name'] ?></td>
                            </tr>
                        <?php endforeach; ?>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<?= $this->endSection() ?>

<?= $this->section('page-script') ?>
<script src="<?= base_url('assets/sneat/js/dashboards-analytics.js') ?>"></script>
<?= $this->endSection() ?>

<?= $this->include('templates/footer') ?>
```

## Langkah 6: Konfigurasi Routes

Edit file `app/Config/Routes.php`:

```php
<?php

use CodeIgniter\Router\RouteCollection;

/**
 * @var RouteCollection $routes
 */
$routes->get('/', 'DashboardController::index');
$routes->get('/login', 'AuthController::login');
$routes->post('/login', 'AuthController::attemptLogin');
$routes->get('/logout', 'AuthController::logout');

$routes->group('', ['filter' => 'auth'], function($routes) {
    $routes->get('/dashboard', 'DashboardController::index');
    
    // Produk
    $routes->get('/products', 'ProductsController::index');
    $routes->get('/products/create', 'ProductsController::create');
    $routes->post('/products/store', 'ProductsController::store');
    $routes->get('/products/edit/(:num)', 'ProductsController::edit/$1');
    $routes->post('/products/update/(:num)', 'ProductsController::update/$1');
    $routes->post('/products/delete/(:num)', 'ProductsController::delete/$1');
    
    // Kasir
    $routes->get('/cashier', 'CashierController::index');
    $routes->post('/cashier/add-item', 'CashierController::addItem');
    $routes->post('/cashier/remove-item', 'CashierController::removeItem');
    $routes->post('/cashier/process-payment', 'CashierController::processPayment');
    
    // Laporan
    $routes->get('/reports', 'ReportsController::index');
    $routes->get('/reports/transaction', 'ReportsController::transaction');
    $routes->get('/reports/sales', 'ReportsController::sales');
    
    // Karyawan
    $routes->get('/employees', 'EmployeesController::index');
    $routes->get('/employees/create', 'EmployeesController::create');
    $routes->post('/employees/store', 'EmployeesController::store');
    $routes->get('/employees/edit/(:num)', 'EmployeesController::edit/$1');
    $routes->post('/employees/update/(:num)', 'EmployeesController::update/$1');
    $routes->post('/employees/delete/(:num)', 'EmployeesController::delete/$1');
    
    // Setting
    $routes->get('/settings', 'SettingsController::index');
    $routes->post('/settings/update', 'SettingsController::update');
});
```

## Langkah 7: Membuat Filter Auth

Buat filter untuk memeriksa apakah user sudah login:

```cmd
php spark make:filter Auth
```

Edit file `app/Filters/Auth.php`:

```php
<?php

namespace App\Filters;

use CodeIgniter\Filters\FilterInterface;
use CodeIgniter\HTTP\RequestInterface;
use CodeIgniter\HTTP\ResponseInterface;

class Auth implements FilterInterface
{
    public function before(RequestInterface $request, $arguments = null)
    {
        if (!session('logged_in')) {
            return redirect()->to('/login');
        }
    }

    public function after(RequestInterface $request, ResponseInterface $response, $arguments = null)
    {
        // Do something here
    }
}
```

Daftarkan filter di `app/Config/Filters.php`:

```php
public $aliases = [
    'csrf'     => CSRF::class,
    'toolbar'  => DebugToolbar::class,
    'honeypot' => Honeypot::class,
    'auth'     => \App\Filters\Auth::class, // Tambahkan ini
];
```

## Langkah 8: Menjalankan Aplikasi

1. Jalankan development server:

```cmd
php spark serve
```

2. Buka browser ke `http://localhost:8080/login`

3. Untuk membuat user admin pertama, buat seeder:

```cmd
php spark make:seeder UserSeeder
```

Edit file `app/Database/Seeds/UserSeeder.php`:

```php
<?php

namespace App\Database\Seeds;

use CodeIgniter\Database\Seeder;
use App\Models\UserModel;

class UserSeeder extends Seeder
{
    public function run()
    {
        $userModel = new UserModel();

        $data = [
            'username' => 'admin',
            'password' => 'admin123',
            'name' => 'Administrator',
            'role' => 'admin'
        ];

        $userModel->insert($data);
    }
}
```

Jalankan seeder:

```cmd
php spark db:seed UserSeeder
```

Sekarang Anda bisa login dengan username `admin` dan password `admin123`.

## Catatan Tambahan

1. Untuk fitur lengkap (CRUD produk, transaksi kasir, laporan, dll), Anda perlu membuat view dan method controller yang sesuai untuk setiap fitur.

2. Pastikan untuk:
   - Menambahkan validasi form
   - Menangani error dengan baik
   - Menambahkan fitur pencarian dan pagination untuk data yang banyak
   - Menambahkan fitur export laporan ke Excel/PDF

3. Untuk tema Sneat, pastikan semua asset (CSS, JS, gambar) sudah di-copy ke folder `public/assets/sneat/`

4. Aplikasi ini sudah memiliki struktur dasar yang siap dikembangkan lebih lanjut sesuai kebutuhan.